{"mappings":"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","sources":["src/app2.js"],"sourcesContent":["const redirect_uri = 'http://localhost:1234/callback'; // change this your value\n//var redirect_uri = \"http://127.0.0.1:5500/index.html\";\n\n\nconst client_id = '87bccbeb23114d44b788fd6cea0511b1';\nconst client_secret = '2b6c6f0ac7bc45a8b23bb33510a6182b';\n\nlet access_token = null;\nlet refresh_token = null;\n//var currentPlaylist = \"\";\n//var radioButtons = [];\n\nconst AUTHORIZE = \"https://accounts.spotify.com/authorize\"\nconst TOKEN = \"https://accounts.spotify.com/api/token\";\n//const PLAYLISTS = \"https://api.spotify.com/v1/me/playlists\";\nconst DEVICES = \"https://api.spotify.com/v1/me/player/devices\";\n// const PLAY = \"https://api.spotify.com/v1/me/player/play\";\n// const PAUSE = \"https://api.spotify.com/v1/me/player/pause\";\n// const NEXT = \"https://api.spotify.com/v1/me/player/next\";\n// const PREVIOUS = \"https://api.spotify.com/v1/me/player/previous\";\n// const PLAYER = \"https://api.spotify.com/v1/me/player\";\n// const TRACKS = \"https://api.spotify.com/v1/playlists/{{PlaylistId}}/tracks\";\n// const CURRENTLYPLAYING = \"https://api.spotify.com/v1/me/player/currently-playing\";\n// const SHUFFLE = \"https://api.spotify.com/v1/me/player/shuffle\";\n\nfunction onPageLoad(){\n    //client_id = localStorage.getItem(\"client_id\");\n    //client_secret = localStorage.getItem(\"client_secret\");\n    if ( window.location.search.length > 0 ){\n        handleRedirect();\n    }\n    else{\n        access_token = localStorage.getItem(\"access_token\");\n        if ( access_token == null ){\n            // we don't have an access token so present token section\n            document.getElementById(\"tokenSection\").style.display = \"block\";\n        }\n        else {\n            // we have an access token so present device section\n            document.getElementById(\"deviceSection\").style.display = 'block';\n            refreshDevices();\n            refreshPlaylists();\n            currentlyPlaying();\n        }\n    }\n    refreshRadioButtons();\n}\n\nconst pageLoad = document.getElementById(\"pageLoad\");\npageLoad.addEventListener(\"onload\", onPageLoad);\n\nfunction handleRedirect(){\n    let code = getCode();\n    fetchAccessToken( code );\n    window.history.pushState(\"\", \"\", redirect_uri); // remove param from url\n}\n\nfunction getCode(){\n    let code = null;\n    const queryString = window.location.search;\n    if ( queryString.length > 0 ){\n        const urlParams = new URLSearchParams(queryString);\n        code = urlParams.get('code')\n    }\n    return code;\n}\n\nfunction requestAuthorization(){\n\n    localStorage.setItem(\"client_id\", client_id);\n    localStorage.setItem(\"client_secret\", client_secret); // In a real app you should not expose your client_secret to the user\n\n    let url = AUTHORIZE;\n    url += \"?client_id=\" + client_id;\n    url += \"&response_type=code\";\n    url += \"&redirect_uri=\" + encodeURI(redirect_uri);\n    url += \"&show_dialog=true\";\n    url += \"&scope=user-read-private user-read-email user-modify-playback-state user-read-playback-position user-library-read streaming user-read-playback-state user-read-recently-played playlist-read-private\";\n    window.location.href = url; // Show Spotify's authorization screen\n}\n\nconst buttonAuth = document.getElementById(\"button\");\nbuttonAuth.addEventListener(\"click\", requestAuthorization)\n\nfunction fetchAccessToken( code ){\n    let body = \"grant_type=authorization_code\";\n    body += \"&code=\" + code;\n    body += \"&redirect_uri=\" + encodeURI(redirect_uri);\n    body += \"&client_id=\" + client_id;\n    body += \"&client_secret=\" + client_secret;\n    callAuthorizationApi(body);\n}\n\nfunction refreshAccessToken(){\n    refresh_token = localStorage.getItem(\"refresh_token\");\n    let body = \"grant_type=refresh_token\";\n    body += \"&refresh_token=\" + refresh_token;\n    body += \"&client_id=\" + client_id;\n    callAuthorizationApi(body);\n}\n\nfunction callAuthorizationApi(body){\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", TOKEN, true);\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    xhr.setRequestHeader('Authorization', 'Basic ' + btoa(client_id + \":\" + client_secret));\n    xhr.send(body);\n    xhr.onload = handleAuthorizationResponse;\n}\n\nfunction handleAuthorizationResponse(){\n    if ( this.status === 200 ){\n        const data = JSON.parse(this.responseText);\n        console.log(data);\n        const data = JSON.parse(this.responseText);\n        if ( data.access_token != undefined ){\n            access_token = data.access_token;\n            localStorage.setItem(\"access_token\", access_token);\n        }\n        if ( data.refresh_token  != undefined ){\n            refresh_token = data.refresh_token;\n            localStorage.setItem(\"refresh_token\", refresh_token);\n        }\n        onPageLoad();\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nfunction refreshDevices(){\n    callApi( \"GET\", DEVICES, null, handleDevicesResponse );\n}\n\nfunction handleDevicesResponse(){\n    if ( this.status === 200 ){\n        const data = JSON.parse(this.responseText);\n        console.log(data);\n        removeAllItems( \"devices\" );\n        data.devices.forEach(item => addDevice(item));\n    }\n    else if ( this.status === 401 ){\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nfunction addDevice(item){\n    let node = document.createElement(\"option\");\n    node.value = item.id;\n    node.innerHTML = item.name;\n    document.getElementById(\"devices\").appendChild(node);\n}\n\nfunction callApi(method, url, body, callback){\n    let xhr = new XMLHttpRequest();\n    xhr.open(method, url, true);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.setRequestHeader('Authorization', 'Bearer ' + access_token);\n    xhr.send(body);\n    xhr.onload = callback;\n}\n\nfunction refreshPlaylists(){\n    callApi( \"GET\", PLAYLISTS, null, handlePlaylistsResponse );\n}\n\nfunction handlePlaylistsResponse(){\n    if ( this.status === 200 ){\n        const data = JSON.parse(this.responseText);\n        console.log(data);\n        removeAllItems( \"playlists\" );\n        data.items.forEach(item => addPlaylist(item));\n        document.getElementById('playlists').value=currentPlaylist;\n    }\n    else if ( this.status === 401 ){\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\n// function addPlaylist(item){\n//     let node = document.createElement(\"option\");\n//     node.value = item.id;\n//     node.innerHTML = item.name + \" (\" + item.tracks.total + \")\";\n//     document.getElementById(\"playlists\").appendChild(node);\n// }\n\nfunction removeAllItems( elementId ){\n    let node = document.getElementById(elementId);\n    while (node.firstChild) {\n        node.removeChild(node.firstChild);\n    }\n}\n//\n// function play(){\n//     let playlist_id = document.getElementById(\"playlists\").value;\n//     let trackindex = document.getElementById(\"tracks\").value;\n//     let album = document.getElementById(\"album\").value;\n//     let body = {};\n//     if ( album.length > 0 ){\n//         body.context_uri = album;\n//     }\n//     else{\n//         body.context_uri = \"spotify:playlist:\" + playlist_id;\n//     }\n//     body.offset = {};\n//     body.offset.position = trackindex.length > 0 ? Number(trackindex) : 0;\n//     body.offset.position_ms = 0;\n//     callApi( \"PUT\", PLAY + \"?device_id=\" + deviceId(), JSON.stringify(body), handleApiResponse );\n// }\n//\n// function shuffle(){\n//     callApi( \"PUT\", SHUFFLE + \"?state=true&device_id=\" + deviceId(), null, handleApiResponse );\n//     play();\n// }\n//\n// function pause(){\n//     callApi( \"PUT\", PAUSE + \"?device_id=\" + deviceId(), null, handleApiResponse );\n// }\n//\n// function next(){\n//     callApi( \"POST\", NEXT + \"?device_id=\" + deviceId(), null, handleApiResponse );\n// }\n//\n// function previous(){\n//     callApi( \"POST\", PREVIOUS + \"?device_id=\" + deviceId(), null, handleApiResponse );\n// }\n//\n// function transfer(){\n//     let body = {};\n//     body.device_ids = [];\n//     body.device_ids.push(deviceId())\n//     callApi( \"PUT\", PLAYER, JSON.stringify(body), handleApiResponse );\n// }\n//\n// function handleApiResponse(){\n//     if ( this.status == 200){\n//         console.log(this.responseText);\n//         setTimeout(currentlyPlaying, 2000);\n//     }\n//     else if ( this.status == 204 ){\n//         setTimeout(currentlyPlaying, 2000);\n//     }\n//     else if ( this.status == 401 ){\n//         refreshAccessToken()\n//     }\n//     else {\n//         console.log(this.responseText);\n//         alert(this.responseText);\n//     }\n// }\n//\nfunction deviceId(){\n    return document.getElementById(\"devices\").value;\n}\n//\n// function fetchTracks(){\n//     let playlist_id = document.getElementById(\"playlists\").value;\n//     if ( playlist_id.length > 0 ){\n//         url = TRACKS.replace(\"{{PlaylistId}}\", playlist_id);\n//         callApi( \"GET\", url, null, handleTracksResponse );\n//     }\n// }\n//\n// function handleTracksResponse(){\n//     if ( this.status == 200 ){\n//         var data = JSON.parse(this.responseText);\n//         console.log(data);\n//         removeAllItems( \"tracks\" );\n//         data.items.forEach( (item, index) => addTrack(item, index));\n//     }\n//     else if ( this.status == 401 ){\n//         refreshAccessToken()\n//     }\n//     else {\n//         console.log(this.responseText);\n//         alert(this.responseText);\n//     }\n// }\n//\n// function addTrack(item, index){\n//     let node = document.createElement(\"option\");\n//     node.value = index;\n//     node.innerHTML = item.track.name + \" (\" + item.track.artists[0].name + \")\";\n//     document.getElementById(\"tracks\").appendChild(node);\n// }\n//\n// function currentlyPlaying(){\n//     callApi( \"GET\", PLAYER + \"?market=US\", null, handleCurrentlyPlayingResponse );\n// }\n//\n// function handleCurrentlyPlayingResponse(){\n//     if ( this.status == 200 ){\n//         var data = JSON.parse(this.responseText);\n//         console.log(data);\n//         if ( data.item != null ){\n//             document.getElementById(\"albumImage\").src = data.item.album.images[0].url;\n//             document.getElementById(\"trackTitle\").innerHTML = data.item.name;\n//             document.getElementById(\"trackArtist\").innerHTML = data.item.artists[0].name;\n//         }\n//\n//\n//         if ( data.device != null ){\n//             // select device\n//             currentDevice = data.device.id;\n//             document.getElementById('devices').value=currentDevice;\n//         }\n//\n//         if ( data.context != null ){\n//             // select playlist\n//             currentPlaylist = data.context.uri;\n//             currentPlaylist = currentPlaylist.substring( currentPlaylist.lastIndexOf(\":\") + 1,  currentPlaylist.length );\n//             document.getElementById('playlists').value=currentPlaylist;\n//         }\n//     }\n//     else if ( this.status == 204 ){\n//\n//     }\n//     else if ( this.status == 401 ){\n//         refreshAccessToken()\n//     }\n//     else {\n//         console.log(this.responseText);\n//         alert(this.responseText);\n//     }\n// }\n//\n// function saveNewRadioButton(){\n//     let item = {};\n//     item.deviceId = deviceId();\n//     item.playlistId = document.getElementById(\"playlists\").value;\n//     radioButtons.push(item);\n//     localStorage.setItem(\"radio_button\", JSON.stringify(radioButtons));\n//     refreshRadioButtons();\n// }\n//\n// function refreshRadioButtons(){\n//     let data = localStorage.getItem(\"radio_button\");\n//     if ( data != null){\n//         radioButtons = JSON.parse(data);\n//         if ( Array.isArray(radioButtons) ){\n//             removeAllItems(\"radioButtons\");\n//             radioButtons.forEach( (item, index) => addRadioButton(item, index));\n//         }\n//     }\n// }\n//\n// function onRadioButton( deviceId, playlistId ){\n//     let body = {};\n//     body.context_uri = \"spotify:playlist:\" + playlistId;\n//     body.offset = {};\n//     body.offset.position = 0;\n//     body.offset.position_ms = 0;\n//     callApi( \"PUT\", PLAY + \"?device_id=\" + deviceId, JSON.stringify(body), handleApiResponse );\n//     //callApi( \"PUT\", SHUFFLE + \"?state=true&device_id=\" + deviceId, null, handleApiResponse );\n// }\n//\n// function addRadioButton(item, index){\n//     let node = document.createElement(\"button\");\n//     node.className = \"btn btn-primary m-2\";\n//     node.innerText = index;\n//     node.onclick = function() { onRadioButton( item.deviceId, item.playlistId ) };\n//     document.getElementById(\"radioButtons\").appendChild(node);\n// }"],"names":[],"version":3,"file":"index.3d936b1d.js.map","sourceRoot":"/__parcel_source_root/"}